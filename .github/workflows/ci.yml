name: Test Packages

on:
  push:
    branches:
      - master
  workflow_dispatch:
  release:

jobs:
  test:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Test some Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd mysql-python
        choco pack
        choco install --no-progress mysql-python -source "'.;https://chocolatey.org/api/v2/'"
        choco uninstall -y mysql-python
        cd ../
        cd love.install
        choco pack
        choco install --no-progress love.install -source "'.;https://chocolatey.org/api/v2/'"
        Test-Path -Path "C:\Program Files\LOVE"
        choco uninstall -y love.install
        Test-Path -Path "C:\Program Files\LOVE"
        cd ../
        cd travis
        choco pack
        choco install --no-progress travis -source "'.;https://chocolatey.org/api/v2/'"
        choco uninstall travis
        cd ../
        cd love.portable
        choco pack
        choco install --no-progress love.portable -source "'.;https://chocolatey.org/api/v2/'"
        choco uninstall -y love.portable
        cd ../
        cd sphinx
        choco pack
        choco install --no-progress sphinx -source "'.;https://chocolatey.org/api/v2/'"
        choco uninstall -y sphinx
        cd ../
        cd scc
        $au_Push=$false
        $env:au_Push = $false
        choco install au
        $github_api_url = 'https://api.github.com/repos/boyter/scc/releases'
        function download_scc {
          $contentFetched = Invoke-WebRequest -Headers @{Authorization="Bearer $($env:GITHUB_TOKEN)"} $github_api_url | ConvertFrom-Json
          $i = 0
          $stableRelease = $contentFetched[0]
          while ($contentFetched[$i].prerelease -eq $true) {
            $stableRelease = $j[$i + 1]
            $i = $i + 1
          }
          $regex32 = '.*scc_.*_Windows_i386.tar.gz'
          $regex64 = '.*scc_.*_Windows_x86_64.tar.gz'
          foreach ($asset in $stableRelease.assets) {
            if (!($url64)) {
              $url64 = Select-String -InputObject $asset.browser_download_url -Pattern $regex64
              $id64 = $asset.id
            }
            if (!($url32)) {
              $url32 = Select-String -InputObject $asset.browser_download_url -Pattern $regex32
              $id32 = $asset.id
            }
            if ($url64 -and $url32) {
              break
            }
          }
          $version = $stableRelease.tag_name
          $version = Get-Version $version
          $url32 = $url32.ToString()
          $url64 = $url64.ToString()
          curl -L $url64 -o tools\scc_3.1.0_Windows_x86_64.tar.gz
          curl -L $url32 -o tools\scc_3.1.0_Windows_i386.tar.gz
          return @{ Version = $version; URL64 = $url64; URL32 = $url32; }
        }
        download_scc
        tree /F /A tools
        choco pack
        choco install --no-progress scc -source "'.;https://chocolatey.org/api/v2/'"
        choco uninstall scc
        cd ../
    # Runs a set of commands using the runners shell
    - uses: actions/upload-artifact@v4
      with:
        name: chocologs
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
  test-manim-latex:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
         python-version: 3.11.9
    - name: Install Python
      run: |
        choco install python3 --no-progress --version=3.11.9
    - name: Install Manim
      run: |
        choco install --no-progress manimce
        cd "manim-latex"
        choco pack
        choco install --no-progress manim-latex -source "'.;https://chocolatey.org/api/v2/'"
        cd ../

    - name: Install Manim and Manim-Tex and test
      run: |
        $ErrorActionPreference = 'Stop'
        $env:PATH="C:\tools\TinyTeX\bin\windows;$env:PATH"
        pip install manim
        python -m manim checkhealth

    - uses: actions/upload-artifact@v4
      with:
        name: chocologs
        path: C:\ProgramData\chocolatey\logs\chocolatey.log

  manim_test:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
         python-version: "3.11.9"
    - name: Make choco Package
      run: |
        cd "manimce"
        choco pack
        choco install --no-progress ffmpeg
        choco install --no-progress python --version=3.11.9
        choco install --no-progress manimce --source "."
    - name: Test Generated Files
      shell: cmd
      continue-on-error: true
      run: |
        set PATH=C:\tools\Manim\Scripts;%PATH%
        where manim
        where manimce
        manim --help
        curl -L https://raw.githubusercontent.com/ManimCommunity/manim/master/example_scenes/basic.py -O basic.py
        manim basic.py SquareToCircle
        choco uninstall -y manimce
    - name: Upload Logs if failes
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: chocologs-manim-failed
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
    - name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: chocologs-manim-success
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
  
  nim_test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set Up
      shell: pwsh
      run: |
        cd nim
        $github_api_url = 'https://api.github.com/repos/nim-lang/Nim/tags'
        function global:au_GetLatest {
          $contentFetched = Invoke-WebRequest $github_api_url | ConvertFrom-Json
          $stableRelease = $contentFetched[0]
          $version = $stableRelease.name.substring(1) 
          $url32 = "https://nim-lang.org/download/nim-$($version)_x32.zip"
          $url64 = "https://nim-lang.org/download/nim-$($version)_x64.zip"
          return @{ Version = $version; URL64 = $url64; URL32 = $url32; }
        }
        $versions = au_GetLatest
        curl -L "$($versions.URL64)" -o tools\nim-$($versions.Version)_x64.zip
        curl -L "$($versions.URL32)" -o tools\nim-$($versions.Version)_x32.zip
        tree /A /F
        choco pack
        echo "C:\tools\Nim\nim-$($versions.Version)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install
      shell: pwsh
      run: | 
        choco install --no-progress nim --source "'.;https://chocolatey.org/api/v2/'"
    - name: Smoke Tests
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: |
        echo 'echo("hello")' > hello.nim
        nim compile --verbosity:0 hello.nim
        ./hello.exe

    - name: Uninstall
      run: |
        choco uninstall nim -y
    - name: List
      run: |
        tree C:\tools
    - name: Upload Logs if failes
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: chocologs-nim-failed
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
    - name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: chocologs-nim-success
        path: C:\ProgramData\chocolatey\logs\chocolatey.log

